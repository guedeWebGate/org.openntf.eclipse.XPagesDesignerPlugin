package org.openntf.eclipse.xpdesigner.core.definitions;

import java.io.ByteArrayInputStream;
import java.io.IOException;
import java.io.StringWriter;
import java.util.Properties;

import org.eclipse.core.resources.IFile;
import org.eclipse.core.resources.IFolder;
import org.eclipse.core.resources.IProject;
import org.eclipse.core.resources.IProjectDescription;
import org.eclipse.core.resources.ResourcesPlugin;
import org.eclipse.core.runtime.CoreException;

public class ServerDefinitionUtils {

	public static void saveProperties2File(Properties props, IFile file) throws IOException, CoreException {
		StringWriter sw = new StringWriter();
		props.store(sw, "Generated by XDE");
		String s = sw.toString();
		ByteArrayInputStream stream = new ByteArrayInputStream(s.getBytes(file.getProject().getDefaultCharset()));
		if (file.exists())
			file.setContents(stream, false, true, null);
		else
			file.create(stream, false, null);
		stream.close();

	}

	public static boolean folderExist(IProject project, String serverName, boolean createIfNotExist) {
		IFolder folder = project.getFolder(serverName);
		if (folder.exists()) {
			return true;
		}
		if (createIfNotExist) {
			try {
				folder.create(false, true, null);
			} catch (Exception ex) {
				ex.printStackTrace();
			}
		}
		return false;
	}

	public static IProject getXPagesServerProject(boolean createIfNotExist) {

		IProject xpageServerProject = ResourcesPlugin.getWorkspace().getRoot().getProject("XPagesServers");

		if (!xpageServerProject.exists() && !createIfNotExist) {
			return null;
		}

		if (!xpageServerProject.exists() && createIfNotExist) {
			IProjectDescription desc = xpageServerProject.getWorkspace().newProjectDescription(xpageServerProject.getName());
			desc.setLocationURI(null);
			try {
				xpageServerProject.create(desc, null);
			} catch (CoreException e) {
				e.printStackTrace();
			}
		}
		try {
			if (!xpageServerProject.isOpen()) {
				xpageServerProject.open(null);
				return xpageServerProject;
			}
		} catch (CoreException e) {
			e.printStackTrace();
		}
		return xpageServerProject;
	}

}
